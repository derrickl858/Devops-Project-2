# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: myAgentPool

variables:
  azureServiceConnectionId: "sc-azuredevops"
  webAppName: "ml-flask-webapp"
  environmentName: 'flask-ml-service'
  projectRoot: $(System.DefaultWorkingDirectory)


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3 -m venv virt
        source virt/bin/activate
        python3 -m pip install --upgrade pip
        python3 -m pip install setup
        python3 -m pip install -r requirements.txt
      displayName: 'Install python packages and dependency'

    - script: |
        python3 -m venv virt
        source virt/bin/activate
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      displayName:  'Installing and run lint'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop