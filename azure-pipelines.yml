# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: myAgentPool

variables:
  azureServiceConnectionId: "sc-azuredevops"
  webAppName: "ml-flask-webapp"


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3 -m venv virt
        source virt/bin/activate
        python3 -m pip install --upgrade pip
        python3 -m pip install setup
        python3 -m pip install -r requirements.txt
      displayName: 'Install python packages and dependency'

    - script: |
        python3 -m venv virt
        source virt/bin/activate
        make install
        make lint
      displayName:  'Installing and run lint'
      
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
        verbose: # (no value); this input is optional
    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deployment
  displayName: "Deploy Webapp"
  dependsOn: Build
  condition: succeeded()
  jobs:
      - deployment: DeploymentJob
        pool: myAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
              - task: UsePythonVersion@0
                inputs:
                  versionSpec: 3.8
                displayName: 'Use Python version 3.8'
    
              - task: AzureWebApp@1
                displayName: 'Deploy Azure Web App : {{ webAppName }}'
                inputs:
                  azureSubscription: $(azureServiceConnectionId)
                  appName: $(webAppName)
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                  deploymentMethod: zipDeploy
