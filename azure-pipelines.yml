# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: myAgentPool

variables:
  azureServiceConnectionId: "sc-azuredevops"
  webAppName: "ml-flask-webapp"
  projectRoot: ${System.DefaultWorkingDirectory}


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3 -m venv virt
        source virt/bin/activate
        python3 -m pip install --upgrade pip
        python3 -m pip install setup
        python3 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install python packages and dependency'

#    - script: |
#        export PATH=$HOME/.local/bin:$PATH
#        make install
#      workingDirectory: $(projectRoot)
#      displayName: 'myStep 2'

    - script: |
        python3 -m venv virt
        source virt/bin/activate
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName:  'Installing and run lint'

#   - task: ArchiveFiles@2
#     displayName: 'myStep 4 - Archive files'
#     inputs:
#       rootFolderOrFile: '$(projectRoot)'
#       includeRootFolder: false
#       archiveType: zip
#       archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#     replaceExistingArchive: true

#   - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#     displayName: 'myStep 5 - Upload package'
#     artifact: drop
